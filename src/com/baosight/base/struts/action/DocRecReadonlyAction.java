/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.baosight.base.struts.action;

import java.sql.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;

import com.baosight.base.service.ITbDocRecMgr;
import com.baosight.mode.TbDocControl;
import com.baosight.mode.TbDocRec;

/** 
 * MyEclipse Struts
 * Creation date: 08-04-2008
 * 
 * XDoclet definition:
 * @struts.action path="/docRecReadonly" name="docRecBookForm" scope="request"
 */
public class DocRecReadonlyAction extends DocActionHelper {

	/**
	 * <p>Decription:进入阅读页面</p>
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * <p>Create Time:2008-7-31</p>
	 * @throws Exception 
	 */
	public ActionForward input(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
			String controlId = request.getParameter("controlId");
			TbDocRec item = null;
			TbDocControl control = null;
			control = tbDocRecMgr.findControlById(controlId);
			doInput(control);
			item = tbDocRecMgr.findById(control.getTbDocRec().getId());
			setBaseInfo((DynaActionForm) form, item,control.getId());
			putCommonInfo(request, item);
			return mapping.findForward("goInput");
	}

	/**
	 * <p>Decription:阅读完成</p>
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception 
	 */
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
			Date nowTime = new Date(System.currentTimeMillis());
			System.out.println("--heaton.cai--DocRecWriteDealAction--add start--");
			String controlId = (String) ((DynaActionForm) form).get("controlId");
			TbDocControl curControl = tbDocRecMgr.findControlById(controlId);
			curControl.setCloseTime(nowTime);
			curControl.setState(ITbDocRecMgr.STATE_CLOSED);
			tbDocRecMgr.saveControl(curControl);
			tbUserOpeationMgr.SaveOrUpdate(curControl.getUserId(),"301","minus");
			String state = null;
			boolean needArchive = false;
			List controls = tbDocRecMgr.findNotClosedControl(curControl.getTbDocRec().getId());
			if(controls==null || controls.isEmpty()){
				state = ITbDocRecMgr.STATE_NAME_END;
				needArchive = true;
			}
			if(state!=null){
				TbDocRec item = tbDocRecMgr.findById(curControl.getTbDocRec().getId());
				item.setDocState(state);
				tbDocRecMgr.save(item);
				if(needArchive){
					docServiceMgr.save2Archives(item,getCurrentUser(request));
				}
			}

			return mapping.findForward("disposedList");
	}

}