/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.baosight.base.struts.action;

import java.io.IOException;
import java.sql.Date;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;

import com.baosight.base.service.IDocSendMgr;
import com.baosight.base.service.IDocServiceMgr;
import com.baosight.mode.TbDocSend;
import com.baosight.mode.TbDocsendControl;
import com.baosight.mode.TbUser;

/** 
 * MyEclipse Struts
 * Creation date: 08-13-2008
 * 
 * XDoclet definition:
 * @struts.action input="\WEB-INF\web\jsp\docsend\sign.jsp" validate="true"
 * @struts.action-forward name="doInput" path="\WEB-INF\web\jsp\docsend\sign.jsp"
 */
public class DocSendSignAction extends DocSendHelper {

	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		String controlId = (String) ((DynaActionForm) form).get("controlId");
		Date nowTime = new Date(System.currentTimeMillis());
		TbDocsendControl control = docSendMgr.findControlById(controlId);
		if(control==null){
			request.setAttribute("errorString", "当前会签可能已被驳回！您不能再进行操作！");
			return mapping.getInputForward();
		}
		TbDocSend item = docSendMgr.findById(control.getTbDocSend().getId());
		control.setState(IDocSendMgr.STATE_END);
		control.setCloseTime(nowTime);
		docSendMgr.saveControl(control);
		tbUserOpeationMgr.SaveOrUpdate(control.getUserId(),"303","minus");
		List controlList = docSendMgr.findActiveControl(item.getId(), IDocSendMgr.STATE_TYPE_SIGN);
		if(controlList==null || controlList.isEmpty()){
			TbUser officer = docSendMgr.getOfficeCharger();
			if(officer==null){
				request.setAttribute("errorString", "未找到局办公室负责人！");
				request.setAttribute("files", docAttachMgr.findByIdAndType(item.getId(), IDocServiceMgr.UPLOAD_TYPE_DOCSEND));
				return mapping.getInputForward();
			}
			TbDocsendControl nextControl = new TbDocsendControl();
			nextControl.setTbDocSend(item);
			nextControl.setCreateTime(nowTime);
			nextControl.setState(IDocSendMgr.STATE_NEW);
			nextControl.setStateName(IDocSendMgr.STATE_NAME_OFFICER);
			nextControl.setStateType(IDocSendMgr.STATE_TYPE_OFFICER);
			nextControl.setUserId(officer.getId());
			nextControl.setUserName(officer.getName());
			docSendMgr.saveControl(nextControl);
			tbUserOpeationMgr.SaveOrUpdate(nextControl.getUserId(),"302","add");
			item.setDocState(nextControl.getStateName());
		}
		if(item.getSignOpinion()!=null && item.getSignOpinion().length()>0){
			item.setSignOpinion(item.getSignOpinion()+"\r\n"+(String) ((DynaActionForm) form).get("signOpinion"));
		}else{
			item.setSignOpinion((String) ((DynaActionForm) form).get("signOpinion"));
		}
		docSendMgr.save(item);
		getAttachAction().saveAttachFile(form, IDocServiceMgr.UPLOAD_TYPE_DOCSEND, item.getId(), IDocServiceMgr.UPLOAD_PATH_DOCSEND);
		return mapping.findForward("disposedList");
	}

	public ActionForward rollBack(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Date nowTime = new Date(System.currentTimeMillis());
		String backControlId = request.getParameter("backControl");
		TbDocsendControl backControl = docSendMgr.findControlById(backControlId);
		if(backControl==null){
			request.setAttribute("errorString", "没有找到您选择的驳回接点");
			return mapping.getInputForward();
		}
		String controlId = (String) ((DynaActionForm) form).get("controlId");
		TbDocsendControl control = docSendMgr.findControlById(controlId);
		if(control==null){
			request.setAttribute("errorString", "当前会签可能已被驳回！您不能再进行操作！");
			return mapping.getInputForward();
		}
		TbDocSend item = docSendMgr.findById(control.getTbDocSend().getId());
//		control.setState(IDocSendMgr.STATE_END);
//		control.setCloseTime(nowTime);
//		docSendMgr.saveControl(control);
		List controlList = docSendMgr.findActiveControl(item.getId(), IDocSendMgr.STATE_TYPE_SIGN);
		if(controlList!=null && !controlList.isEmpty()){
			Iterator iter = controlList.iterator();
			while(iter.hasNext()){
				TbDocsendControl ct = (TbDocsendControl)iter.next();
				if(IDocSendMgr.STATE_NEW.equals(ct.getState())){
					tbUserOpeationMgr.SaveOrUpdate(ct.getUserId(),"302","minus");
				}else if(IDocSendMgr.STATE_DISPOSE.equals(ct.getState())){
					tbUserOpeationMgr.SaveOrUpdate(ct.getUserId(),"303","minus");
				}
				docSendMgr.deleteControl(ct);
			}
		}
		TbDocsendControl nextControl = new TbDocsendControl();
		nextControl.setTbDocSend(item);
		nextControl.setCreateTime(nowTime);
		nextControl.setState(IDocSendMgr.STATE_NEW);
		nextControl.setStateName(backControl.getStateName());
		nextControl.setStateType(backControl.getStateType());
		nextControl.setUserId(backControl.getUserId());
		nextControl.setUserName(backControl.getUserName());
		docSendMgr.saveControl(nextControl);
		tbUserOpeationMgr.SaveOrUpdate(nextControl.getUserId(),"302","add");
		item.setDocState(nextControl.getStateName());
		docSendMgr.save(item);
		return mapping.findForward("newAndDoing");
	}

}